spring.application.name=consumer_service
spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=${SPRING_KAFKA_CONSUMER_GROUP_ID:my-group}
spring.kafka.consumer.auto-offset-reset=${SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET:earliest}
spring.kafka.consumer.key-deserializer=${SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
spring.kafka.consumer.value-deserializer=${SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER:org.apache.kafka.common.serialization.StringDeserializer}
spring.cloud.zookeeper.config.enabled=${SPRING_CLOUD_ZOOKEEPER_CONFIG_ENABLED:false}
spring.cloud.zookeeper.connect-string=${SPRING_CLOUD_ZOOKEEPER_CONNECT_STRING:zookeeper:2181}


spring.jpa.open-in-view=true

server.port=8082

# Database Configuration
    # if using Docker (comment this)
spring.datasource.url=jdbc:postgresql://postgresSQL:5432/messages
    # if using on local (uncomment this)
#spring.datasource.url=jdbc:postgresql://localhost:5432/messages
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update